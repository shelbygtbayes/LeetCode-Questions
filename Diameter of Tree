/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 
 * };
 */
class Solution {
public:
    int height(TreeNode* root)
    {
    
        if(!root || (!root->left and !root->right)) return 0;
        int l = height(root->left) + 1;
        int r = height(root->right) + 1;
        return max(l,r);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        int diameter = 0;
        if(root->left)
            diameter += height(root->left) + 1;
        if(root->right)
            diameter += height(root->right) + 1;
        int right_height = height(root->right);
        int left_diameter = diameterOfBinaryTree(root->left);
        int right_diameter = diameterOfBinaryTree(root->right);
        return max( diameter , max(left_diameter , right_diameter));
    }
};
