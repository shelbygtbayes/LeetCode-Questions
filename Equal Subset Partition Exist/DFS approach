class Solution {
public:
    bool dfs(vector<int>& nums,int index,int target)
    {
        if(target == 0) return true;
        else if( index == nums.size() || nums[index] > target ) return false;
        for(int i = index+1 ; i<nums.size() ; i++)
        {
            if(dfs(nums,i,target-nums[i])) return true;
        }
        return false;
    }
    bool canPartition(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int sum = accumulate(nums.begin(),nums.end(),0);
        if(sum%2) return false;
        return dfs(nums,0,sum/2);
    }
};
