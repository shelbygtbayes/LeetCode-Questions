class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        // Greedy Approach
        // Sort the Vector Array such that Bigger Elements are picked first
        // not optimistically sort the vectors such that the abs(diff between vector elements) is maximium
        sort(costs.begin(),costs.end(),[](const vector<int>&u,const vector<int>&v)
                                         {return abs(u[0]-u[1]) > abs(v[0]-v[1]);});
        int a = 0, b = 0,t = 0;
        for(int i = 0;i < costs.size();i++)
        {
            if(a < costs.size()>>1 and b < costs.size()>>1)
            {
                if(costs[i][0] < costs[i][1])
                {
                    a++;
                    t+= costs[i][0];
                }
                else
                {
                    b++;
                    t+= costs[i][1];
                }
            }
            else if(a == costs.size()>>1)
            {
                b++;
                t+= costs[i][1];
            }
            else
            {
                a++;
                t+= costs[i][0];
            }
        }
        return t;
    }
};
