#include <bits/stdc++.h>
using namespace std;
int main() 
{
	int arr[] = {2, 3, 1, 5, 6, 3, 7, 9, 14, 10, 2, 5};
	int k = 35 , n = sizeof(arr)/sizeof(arr[0]) , ans = n+1 , st = 0 , end = 0;
	// Two Pointer Approach (Subset)
	int sum = arr[st] ;
	while(st <= end)
	{
	    if(arr[st] == k || arr[end] == k) 
	    {
	        ans = 1;
	        break;
	    }
	    if(sum >= k)
	    {
	        ans = min(ans , end-st+1);
	        //cout <<"Here : "<<ans<<endl;
	        sum -= arr[st];
	        st++;
	        if(st == n) break;
	    }
	    else
	    {
	        end++;
	        if(end == n) break;
	        else sum += arr[end];
	    }
	}
	if(ans == n+1) ans = -1;
	cout << ans << endl;
    // Priority Queue 
    priority_queue<int> pq;
    for(int i = 0; i < n ; i++)
    {
        pq.push(arr[i]);
    }
    sum = 0;
    int cnt = 0;
    while(sum < k and !pq.empty())
    {
        sum+=pq.top();
        pq.pop();
        cnt++;
    }
    cout << cnt;
	return 0;
}
